{"ast":null,"code":"import _classCallCheck from \"/home/egarciasec/Projects/ReactJS/Dex/pdex/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/egarciasec/Projects/ReactJS/Dex/pdex/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/egarciasec/Projects/ReactJS/Dex/pdex/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/egarciasec/Projects/ReactJS/Dex/pdex/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/egarciasec/Projects/ReactJS/Dex/pdex/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/egarciasec/Projects/ReactJS/Dex/pdex/src/Components/PokeTable.jsx\";\nimport React, { Component } from 'react';\n\nvar PokeTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PokeTable, _Component);\n\n  function PokeTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PokeTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PokeTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentView: \"PokeInfo\",\n      //Results obtained from JSON Fethc\n      idResult: null,\n      nameResult: null,\n      specResult: null,\n      typeResult: [],\n      abilityResult: [],\n      moveResult: [],\n      picResult: null,\n      prevPic: null,\n      prevID: null,\n      prevName: null,\n      //Parameters for the Search\n      searchType: \"pokemon\",\n      searchParam: \"0\",\n      urlForPokeSearch: \"https://pokeapi.co/api/v2/pokemon/1/\",\n      urlForMoveSearch: \"https://pokeapi.co/api/v2/move/1/\",\n      //CSS Stylings\n      colorStyle: {\n        color: 'red'\n      },\n      borderStyle: {\n        borderColor: 'white'\n      },\n      //Move States\n      moveNameResult: null,\n      idMv: null,\n      moveEffectResult: null,\n      movePowerResult: 0,\n      moveAccuracyResult: 0,\n      moveEffectChanceResult: 0,\n      moveTypeResult: null,\n      //Ability States\n      abilityIdResult: 0,\n      abilityNameResult: null,\n      abilityEffectResult: null,\n      //Type States\n      typeIdResult: 0,\n      typeNameResult: null,\n      doubleDamageFrom: [],\n      doubleDamageTo: [],\n      halfDamageFrom: [],\n      halfDamageTo: [],\n      noDamageFrom: [],\n      noDamageTo: [],\n      //Evolution States\n      speciesChain: null,\n      evolutionChain: []\n      /*\n      //\n      //      Functions\n      //\n      */\n      //Go Back to PokeInfo\n\n    };\n    return _this;\n  }\n\n  _createClass(PokeTable, [{\n    key: \"resetView\",\n    value: function resetView() {\n      this.setState({\n        currentView: \"PokeInfo\",\n        picResult: this.state.prevPic,\n        idResult: this.state.prevID,\n        nameResult: this.state.prevName\n      });\n      var typeColor = null; //Check for Primary Type\n\n      if (this.state.typeResult.length === 1) {\n        typeColor = this.state.typeResult[0].type.name;\n      } else {\n        if (this.state.typeResult[1].type.name === 'fire') {\n          typeColor = this.state.typeResult[1].type.name;\n        } else if (this.state.typeResult[1].type.name === 'grass') {\n          typeColor = this.state.typeResult[1].type.name;\n        } else if (this.state.typeResult[1].type.name === 'electric') {\n          typeColor = this.state.typeResult[1].type.name;\n        } else if (this.state.typeResult[1].type.name === 'water') {\n          typeColor = this.state.typeResult[1].type.name;\n        } else if (this.state.typeResult[1].type.name === 'ice') {\n          typeColor = this.state.typeResult[1].type.name;\n        } else {\n          typeColor = this.state.typeResult[0].type.name;\n        }\n      } //Color Sets\n\n\n      if (typeColor === 'fire' || typeColor === 'dragon') {\n        this.setState({\n          borderStyle: {\n            borderColor: 'red'\n          },\n          colorStyle: {\n            color: 'red'\n          }\n        });\n      } else if (typeColor === 'water' || typeColor === 'ice') {\n        this.setState({\n          borderStyle: {\n            borderColor: 'blue'\n          },\n          colorStyle: {\n            color: 'blue'\n          }\n        });\n      } else if (typeColor === 'electric') {\n        this.setState({\n          borderStyle: {\n            borderColor: 'yellow'\n          },\n          colorStyle: {\n            color: 'yellow'\n          }\n        });\n      } else if (typeColor === 'grass') {\n        this.setState({\n          borderStyle: {\n            borderColor: 'green'\n          },\n          colorStyle: {\n            color: 'green'\n          }\n        });\n      } else if (typeColor === 'poison') {\n        this.setState({\n          borderStyle: {\n            borderColor: 'purple'\n          },\n          colorStyle: {\n            color: 'purple'\n          }\n        });\n      } else if (typeColor === 'ground' || typeColor === 'rock') {\n        this.setState({\n          borderStyle: {\n            borderColor: 'brown'\n          },\n          colorStyle: {\n            color: 'brown'\n          }\n        });\n      } else {\n        this.setState({\n          borderStyle: {\n            borderColor: 'white'\n          },\n          colorStyle: {\n            color: 'gray'\n          }\n        });\n      }\n    } //Function to UpperCase first Letter\n\n  }, {\n    key: \"firstUpper\",\n    value: function firstUpper(stringD) {\n      return stringD.charAt(0).toUpperCase() + stringD.slice(1);\n    } //Fetch Function\n\n  }, {\n    key: \"pokeSearch\",\n    value: function pokeSearch() {\n      var _this2 = this;\n\n      fetch(this.state.urlForPokeSearch) //Return as JSON\n      .then(function (d) {\n        return d.json();\n      }).then(function (d) {\n        _this2.setState({\n          idResult: \"#\" + d.id,\n          nameResult: d.name.charAt(0).toUpperCase() + d.name.slice(1),\n          specResult: d.name,\n          moveResult: d.moves,\n          picResult: d.sprites.front_default,\n          abilityResult: d.abilities,\n          typeResult: d.types\n        });\n      }) //Set Style Colors depending on Result Type\n      .then(function (d) {\n        var typeColor = null; //Check for Primary Type\n\n        if (_this2.state.typeResult.length === 1) {\n          typeColor = _this2.state.typeResult[0].type.name;\n        } else {\n          if (_this2.state.typeResult[1].type.name === 'fire') {\n            typeColor = _this2.state.typeResult[1].type.name;\n          } else if (_this2.state.typeResult[1].type.name === 'grass') {\n            typeColor = _this2.state.typeResult[1].type.name;\n          } else if (_this2.state.typeResult[1].type.name === 'electric') {\n            typeColor = _this2.state.typeResult[1].type.name;\n          } else if (_this2.state.typeResult[1].type.name === 'water') {\n            typeColor = _this2.state.typeResult[1].type.name;\n          } else if (_this2.state.typeResult[1].type.name === 'ice') {\n            typeColor = _this2.state.typeResult[1].type.name;\n          } else {\n            typeColor = _this2.state.typeResult[0].type.name;\n          }\n        } //Color Sets\n\n\n        if (typeColor === 'fire' || typeColor === 'dragon') {\n          _this2.setState({\n            borderStyle: {\n              borderColor: 'red'\n            },\n            colorStyle: {\n              color: 'red'\n            }\n          });\n        } else if (typeColor === 'water' || typeColor === 'ice') {\n          _this2.setState({\n            borderStyle: {\n              borderColor: 'blue'\n            },\n            colorStyle: {\n              color: 'blue'\n            }\n          });\n        } else if (typeColor === 'electric') {\n          _this2.setState({\n            borderStyle: {\n              borderColor: 'yellow'\n            },\n            colorStyle: {\n              color: 'yellow'\n            }\n          });\n        } else if (typeColor === 'grass') {\n          _this2.setState({\n            borderStyle: {\n              borderColor: 'green'\n            },\n            colorStyle: {\n              color: 'green'\n            }\n          });\n        } else if (typeColor === 'poison') {\n          _this2.setState({\n            borderStyle: {\n              borderColor: 'purple'\n            },\n            colorStyle: {\n              color: 'purple'\n            }\n          });\n        } else if (typeColor === 'ground' || typeColor === 'rock') {\n          _this2.setState({\n            borderStyle: {\n              borderColor: 'brown'\n            },\n            colorStyle: {\n              color: 'brown'\n            }\n          });\n        } else {\n          _this2.setState({\n            borderStyle: {\n              borderColor: 'white'\n            },\n            colorStyle: {\n              color: 'gray'\n            }\n          });\n        }\n      });\n      var species = \"https://pokeapi.co/api/v2/pokemon-species/\" + this.state.specResult + \"/\";\n      this.speciesSearch(species);\n    }\n  }, {\n    key: \"speciesSearch\",\n    value: function speciesSearch(species) {\n      var _this3 = this;\n\n      fetch(species).then(function (s) {\n        return s.json();\n      }).then(function (s) {\n        _this3.setState({\n          speciesChain: s.evolution_chain.url\n        });\n      });\n    }\n  }, {\n    key: \"evolSearch\",\n    value: function evolSearch(evol) {\n      var _this4 = this;\n\n      var chainSearch = this.state.speciesChain;\n      fetch(chainSearch).then(function (c) {\n        return c.json();\n      }).then(function (c) {\n        _this4.setState({\n          evolutionChain: c.chain\n        });\n      });\n    } //Query API based on Move\n\n  }, {\n    key: \"moveSearch\",\n    value: function moveSearch(moveParam) {\n      var _this5 = this;\n\n      fetch(moveParam) //Return as JSON\n      .then(function (m) {\n        return m.json();\n      }).then(function (m) {\n        _this5.setState({\n          idMv: \"#\" + m.id,\n          moveNameResult: m.name.charAt(0).toUpperCase() + m.name.slice(1),\n          moveEffectResult: m.effect_entries[m.effect_entries.length - 1].short_effect,\n          movePowerResult: m.power,\n          moveAccuracyResult: m.accuracy,\n          moveEffectChanceResult: m.effect_chance,\n          moveTypeResult: m.type.name.charAt(0).toUpperCase() + m.type.name.slice(1),\n          currentView: \"MoveInfo\"\n        });\n      }).then(function (m) {\n        var typeColor = null; //Check for Primary Type\n\n        typeColor = _this5.state.moveTypeResult.toLowerCase(); //Color Sets\n\n        if (typeColor === 'fire' || typeColor === 'dragon') {\n          _this5.setState({\n            borderStyle: {\n              borderColor: 'red'\n            },\n            colorStyle: {\n              color: 'red'\n            }\n          });\n        } else if (typeColor === 'water' || typeColor === 'ice') {\n          _this5.setState({\n            borderStyle: {\n              borderColor: 'blue'\n            },\n            colorStyle: {\n              color: 'blue'\n            }\n          });\n        } else if (typeColor === 'electric') {\n          _this5.setState({\n            borderStyle: {\n              borderColor: 'yellow'\n            },\n            colorStyle: {\n              color: 'yellow'\n            }\n          });\n        } else if (typeColor === 'grass') {\n          _this5.setState({\n            borderStyle: {\n              borderColor: 'green'\n            },\n            colorStyle: {\n              color: 'green'\n            }\n          });\n        } else if (typeColor === 'poison') {\n          _this5.setState({\n            borderStyle: {\n              borderColor: 'purple'\n            },\n            colorStyle: {\n              color: 'purple'\n            }\n          });\n        } else if (typeColor === 'ground' || typeColor === 'rock') {\n          _this5.setState({\n            borderStyle: {\n              borderColor: 'brown'\n            },\n            colorStyle: {\n              color: 'brown'\n            }\n          });\n        } else {\n          _this5.setState({\n            borderStyle: {\n              borderColor: 'white'\n            },\n            colorStyle: {\n              color: 'gray'\n            }\n          });\n        }\n      });\n    } //Query API based on Ability\n\n  }, {\n    key: \"abilitySearch\",\n    value: function abilitySearch(abilParam) {\n      var _this6 = this;\n\n      fetch(abilParam) //Return as JSON\n      .then(function (b) {\n        return b.json();\n      }).then(function (b) {\n        _this6.setState({\n          abilityIdResult: \"#\" + b.id,\n          abilityNameResult: b.name.charAt(0).toUpperCase() + b.name.slice(1),\n          abilityEffectResult: b.effect_entries[b.effect_entries.length - 1].short_effect,\n          currentView: \"AbilityInfo\"\n        });\n      });\n    } //Query API based on Type\n\n  }, {\n    key: \"typeSearch\",\n    value: function typeSearch(typeParam) {\n      var _this7 = this;\n\n      fetch(typeParam) //Return JSON\n      .then(function (t) {\n        return t.json();\n      }).then(function (t) {\n        if (_this7.state.picResult != null) {\n          _this7.setState({\n            typeIdResult: \"#\" + t.id,\n            typeNameResult: t.name.charAt(0).toUpperCase() + t.name.slice(1),\n            doubleDamageFrom: t.damage_relations.double_damage_from,\n            doubleDamageTo: t.damage_relations.double_damage_to,\n            halfDamageFrom: t.damage_relations.half_damage_from,\n            halfDamageTo: t.damage_relations.half_damage_to,\n            noDamageFrom: t.damage_relations.no_damage_from,\n            noDamageTo: t.damage_relations.no_damage_to,\n            prevPic: _this7.state.picResult,\n            picResult: null,\n            prevID: _this7.state.idResult,\n            prevName: _this7.state.nameResult,\n            nameResult: null,\n            idResult: null,\n            currentView: \"TypeInfo\"\n          });\n        } else {\n          _this7.setState({\n            typeIdResult: \"#\" + t.id,\n            typeNameResult: t.name.charAt(0).toUpperCase() + t.name.slice(1),\n            doubleDamageFrom: t.damage_relations.double_damage_from,\n            doubleDamageTo: t.damage_relations.double_damage_to,\n            halfDamageFrom: t.damage_relations.half_damage_from,\n            halfDamageTo: t.damage_relations.half_damage_to,\n            noDamageFrom: t.damage_relations.no_damage_from,\n            noDamageTo: t.damage_relations.no_damage_to,\n            currentView: \"TypeInfo\"\n          });\n        }\n      }).then(function (t) {\n        var typeColor = null; //Check for Primary Type\n\n        typeColor = _this7.state.typeNameResult.toLowerCase(); //Color Sets\n\n        if (typeColor === 'fire' || typeColor === 'dragon') {\n          _this7.setState({\n            borderStyle: {\n              borderColor: 'red'\n            },\n            colorStyle: {\n              color: 'red'\n            }\n          });\n        } else if (typeColor === 'water' || typeColor === 'ice') {\n          _this7.setState({\n            borderStyle: {\n              borderColor: 'blue'\n            },\n            colorStyle: {\n              color: 'blue'\n            }\n          });\n        } else if (typeColor === 'electric') {\n          _this7.setState({\n            borderStyle: {\n              borderColor: 'yellow'\n            },\n            colorStyle: {\n              color: 'yellow'\n            }\n          });\n        } else if (typeColor === 'grass') {\n          _this7.setState({\n            borderStyle: {\n              borderColor: 'green'\n            },\n            colorStyle: {\n              color: 'green'\n            }\n          });\n        } else if (typeColor === 'poison') {\n          _this7.setState({\n            borderStyle: {\n              borderColor: 'purple'\n            },\n            colorStyle: {\n              color: 'purple'\n            }\n          });\n        } else if (typeColor === 'ground' || typeColor === 'rock') {\n          _this7.setState({\n            borderStyle: {\n              borderColor: 'brown'\n            },\n            colorStyle: {\n              color: 'brown'\n            }\n          });\n        } else {\n          _this7.setState({\n            borderStyle: {\n              borderColor: 'white'\n            },\n            colorStyle: {\n              color: 'gray'\n            }\n          });\n        }\n      });\n    }\n    /*\n    //\n    //      Main\n    //\n    */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: this.state.colorStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, \"Pokedex\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, this.state.idResult, \" \", this.state.nameResult), React.createElement(\"img\", {\n        src: this.state.picResult,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }), this.state.currentView === \"PokeInfo\" && React.createElement(\"div\", {\n        id: \"PokeINFO\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        style: this.state.borderStyle,\n        defaultValue: \"Pokemon or ID...\",\n        onClick: function onClick(e) {\n          return e.target.value = '';\n        },\n        onChange: function onChange(e) {\n          _this8.setState({\n            searchParam: e.target.value.toLowerCase(),\n            urlForPokeSearch: \"https://pokeapi.co/api/v2/pokemon/\" + e.target.value.toLowerCase() + \"/\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        style: this.state.borderStyle,\n        onClick: function onClick() {\n          return _this8.pokeSearch();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }, \"Search\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"tableDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        id: \"abilityTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }, \"Abilities:\"))), Object.keys(this.state.abilityResult).map(function (abil) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 441\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: _this8.state.borderStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 442\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          style: _this8.state.colorStyle,\n          onClick: function onClick(ab) {\n            _this8.abilitySearch(\"https://pokeapi.co/api/v2/ability/\" + _this8.state.abilityResult[abil].ability.name + \"/\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 443\n          },\n          __self: this\n        }, _this8.firstUpper(_this8.state.abilityResult[abil].ability.name))));\n      }))), React.createElement(\"td\", {\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        id: \"typeTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }, \"Types:\"))), Object.keys(this.state.typeResult).map(function (typing) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 461\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: _this8.state.borderStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 462\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          style: _this8.state.colorStyle,\n          onClick: function onClick(t) {\n            _this8.typeSearch(\"https://pokeapi.co/api/v2/type/\" + _this8.state.typeResult[typing].type.name + \"/\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 463\n          },\n          __self: this\n        }, _this8.firstUpper(_this8.state.typeResult[typing].type.name))));\n      })))))), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      }, \"Moves:\"), React.createElement(\"table\", {\n        id: \"moveTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }, \" Move Name \"), React.createElement(\"td\", {\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, \" Learned At \"), React.createElement(\"td\", {\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }, \" Learned By \")), Object.keys(this.state.moveResult).map(function (move) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 486\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: _this8.state.borderStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 487\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          style: _this8.state.colorStyle,\n          onClick: function onClick(mv) {\n            _this8.moveSearch(\"https://pokeapi.co/api/v2/move/\" + _this8.state.moveResult[move].move.name + \"/\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 488\n          },\n          __self: this\n        }, _this8.firstUpper(_this8.state.moveResult[move].move.name))), React.createElement(\"td\", {\n          style: _this8.state.borderStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 492\n          },\n          __self: this\n        }, _this8.state.moveResult[move].version_group_details[_this8.state.moveResult[move].version_group_details.length - 1].level_learned_at), React.createElement(\"td\", {\n          style: _this8.state.borderStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 493\n          },\n          __self: this\n        }, _this8.firstUpper(_this8.state.moveResult[move].version_group_details[_this8.state.moveResult[move].version_group_details.length - 1].move_learn_method.name)));\n      }))), this.state.currentView === \"MoveInfo\" && React.createElement(\"div\", {\n        id: \"MoveInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        style: this.state.borderStyle,\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }, this.state.moveNameResult)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      }, \"ID\"), React.createElement(\"td\", {\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509\n        },\n        __self: this\n      }, this.state.idMv)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512\n        },\n        __self: this\n      }, \"Type\"), React.createElement(\"td\", {\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }, this.state.moveTypeResult)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516\n        },\n        __self: this\n      }, \"Effect\"), React.createElement(\"td\", {\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517\n        },\n        __self: this\n      }, this.state.moveEffectResult)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      }, \"Power\"), React.createElement(\"td\", {\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521\n        },\n        __self: this\n      }, this.state.movePowerResult)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524\n        },\n        __self: this\n      }, \"Accuracy\"), React.createElement(\"td\", {\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525\n        },\n        __self: this\n      }, this.state.moveAccuracyResult)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528\n        },\n        __self: this\n      }, \"Effect Chance\"), React.createElement(\"td\", {\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529\n        },\n        __self: this\n      }, this.state.moveEffectChanceResult))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        style: this.state.borderStyle,\n        onClick: function onClick(r) {\n          _this8.resetView();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533\n        },\n        __self: this\n      }, \"Reset\")), this.state.currentView === \"AbilityInfo\" && React.createElement(\"div\", {\n        id: \"AbilityInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        style: this.state.borderStyle,\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543\n        },\n        __self: this\n      }, this.state.abilityNameResult)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546\n        },\n        __self: this\n      }, \"ID\"), React.createElement(\"td\", {\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547\n        },\n        __self: this\n      }, this.state.abilityIdResult)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550\n        },\n        __self: this\n      }, \"Effect\"), React.createElement(\"td\", {\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551\n        },\n        __self: this\n      }, this.state.abilityEffectResult))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        style: this.state.borderStyle,\n        onClick: function onClick(r) {\n          _this8.resetView();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555\n        },\n        __self: this\n      }, \"Reset\")), this.state.currentView === \"TypeInfo\" && React.createElement(\"div\", {\n        id: \"TypeInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        style: this.state.borderStyle,\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565\n        },\n        __self: this\n      }, this.state.typeNameResult)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568\n        },\n        __self: this\n      }, \"ID\"), React.createElement(\"td\", {\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      }, this.state.typeIdResult)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        rowSpan: this.state.doubleDamageFrom.length + 1,\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572\n        },\n        __self: this\n      }, \"Double Damage From\")), Object.keys(this.state.doubleDamageFrom).map(function (typ) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 576\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: _this8.state.borderStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 576\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          onClick: function onClick(t) {\n            _this8.typeSearch(\"https://pokeapi.co/api/v2/type/\" + _this8.state.doubleDamageFrom[typ].name + \"/\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 577\n          },\n          __self: this\n        }, _this8.firstUpper(_this8.state.doubleDamageFrom[typ].name))));\n      }), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        rowSpan: this.state.doubleDamageTo.length + 1,\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584\n        },\n        __self: this\n      }, \"Double Damage To\")), Object.keys(this.state.doubleDamageTo).map(function (typ) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 588\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: _this8.state.borderStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 588\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          onClick: function onClick(t) {\n            _this8.typeSearch(\"https://pokeapi.co/api/v2/type/\" + _this8.state.doubleDamageTo[typ].name + \"/\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 589\n          },\n          __self: this\n        }, _this8.firstUpper(_this8.state.doubleDamageTo[typ].name))));\n      }), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        rowSpan: this.state.halfDamageFrom.length + 1,\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }, \"Half Damage From\")), Object.keys(this.state.halfDamageFrom).map(function (typ) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 600\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: _this8.state.borderStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 600\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          onClick: function onClick(t) {\n            _this8.typeSearch(\"https://pokeapi.co/api/v2/type/\" + _this8.state.halfDamageFrom[typ].name + \"/\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 601\n          },\n          __self: this\n        }, _this8.firstUpper(_this8.state.halfDamageFrom[typ].name))));\n      }), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        rowSpan: this.state.halfDamageTo.length + 1,\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608\n        },\n        __self: this\n      }, \"Half Damage To\")), Object.keys(this.state.halfDamageTo).map(function (typ) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 612\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: _this8.state.borderStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 612\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          onClick: function onClick(t) {\n            _this8.typeSearch(\"https://pokeapi.co/api/v2/type/\" + _this8.state.halfDamageTo[typ].name + \"/\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 613\n          },\n          __self: this\n        }, _this8.firstUpper(_this8.state.halfDamageTo[typ].name))));\n      }), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        rowSpan: this.state.noDamageFrom.length + 1,\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 620\n        },\n        __self: this\n      }, \"No Damage From\")), Object.keys(this.state.noDamageFrom).map(function (typ) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 624\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: _this8.state.borderStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 624\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          onClick: function onClick(t) {\n            _this8.typeSearch(\"https://pokeapi.co/api/v2/type/\" + _this8.state.noDamageFrom[typ].name + \"/\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 625\n          },\n          __self: this\n        }, _this8.firstUpper(_this8.state.noDamageFrom[typ].name))));\n      }), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        rowSpan: this.state.noDamageTo.length + 1,\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632\n        },\n        __self: this\n      }, \"No Damage To\")), Object.keys(this.state.noDamageTo).map(function (typ) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 636\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: _this8.state.borderStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 636\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          onClick: function onClick(t) {\n            _this8.typeSearch(\"https://pokeapi.co/api/v2/type/\" + _this8.state.noDamageTo[typ].name + \"/\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 637\n          },\n          __self: this\n        }, _this8.firstUpper(_this8.state.noDamageTo[typ].name))));\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        style: this.state.borderStyle,\n        onClick: function onClick(r) {\n          _this8.resetView();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645\n        },\n        __self: this\n      }, \"Reset\")));\n    }\n  }]);\n\n  return PokeTable;\n}(Component);\n\nexport default PokeTable;","map":{"version":3,"sources":["/home/egarciasec/Projects/ReactJS/Dex/pdex/src/Components/PokeTable.jsx"],"names":["React","Component","PokeTable","state","currentView","idResult","nameResult","specResult","typeResult","abilityResult","moveResult","picResult","prevPic","prevID","prevName","searchType","searchParam","urlForPokeSearch","urlForMoveSearch","colorStyle","color","borderStyle","borderColor","moveNameResult","idMv","moveEffectResult","movePowerResult","moveAccuracyResult","moveEffectChanceResult","moveTypeResult","abilityIdResult","abilityNameResult","abilityEffectResult","typeIdResult","typeNameResult","doubleDamageFrom","doubleDamageTo","halfDamageFrom","halfDamageTo","noDamageFrom","noDamageTo","speciesChain","evolutionChain","setState","typeColor","length","type","name","stringD","charAt","toUpperCase","slice","fetch","then","d","json","id","moves","sprites","front_default","abilities","types","species","speciesSearch","s","evolution_chain","url","evol","chainSearch","c","chain","moveParam","m","effect_entries","short_effect","power","accuracy","effect_chance","toLowerCase","abilParam","b","typeParam","t","damage_relations","double_damage_from","double_damage_to","half_damage_from","half_damage_to","no_damage_from","no_damage_to","e","target","value","pokeSearch","Object","keys","map","abil","ab","abilitySearch","ability","firstUpper","typing","typeSearch","move","mv","moveSearch","version_group_details","level_learned_at","move_learn_method","r","resetView","typ"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n\nclass PokeTable extends Component {\n    state = { \n        currentView: \"PokeInfo\",\n        //Results obtained from JSON Fethc\n        idResult: null,\n        nameResult: null,\n        specResult: null,\n        typeResult: [],\n        abilityResult: [],\n        moveResult: [],\n        picResult: null ,\n        prevPic: null,\n        prevID: null,\n        prevName: null,\n        //Parameters for the Search\n        searchType: \"pokemon\",\n        searchParam: \"0\",\n        urlForPokeSearch: \"https://pokeapi.co/api/v2/pokemon/1/\",\n        urlForMoveSearch: \"https://pokeapi.co/api/v2/move/1/\",\n        //CSS Stylings\n        colorStyle: {\n            color: 'red'\n        },\n        borderStyle: {\n            borderColor: 'white'\n        },\n        //Move States\n        moveNameResult: null,\n        idMv: null,\n        moveEffectResult: null,\n        movePowerResult: 0,\n        moveAccuracyResult: 0,\n        moveEffectChanceResult: 0,\n        moveTypeResult: null,\n        //Ability States\n        abilityIdResult: 0,\n        abilityNameResult: null,\n        abilityEffectResult: null,\n        //Type States\n        typeIdResult: 0,\n        typeNameResult: null,\n        doubleDamageFrom: [],\n        doubleDamageTo: [],\n        halfDamageFrom: [],\n        halfDamageTo: [],\n        noDamageFrom: [],\n        noDamageTo: [],\n        //Evolution States\n        speciesChain: null,\n        evolutionChain: []\n    }\n\n/*\n//\n//      Functions\n//\n*/\n\n    //Go Back to PokeInfo\n    resetView() {\n        this.setState({\n            currentView: \"PokeInfo\",\n            picResult: this.state.prevPic,\n            idResult: this.state.prevID,\n            nameResult: this.state.prevName\n        })\n        var typeColor = null;\n        //Check for Primary Type\n        if(this.state.typeResult.length === 1) {\n            typeColor = this.state.typeResult[0].type.name;\n        } else {\n            if (this.state.typeResult[1].type.name === 'fire') {\n                typeColor = this.state.typeResult[1].type.name;\n            } else if (this.state.typeResult[1].type.name === 'grass') {\n                typeColor = this.state.typeResult[1].type.name;\n            } else if (this.state.typeResult[1].type.name === 'electric') {\n                typeColor = this.state.typeResult[1].type.name;\n            } else if (this.state.typeResult[1].type.name === 'water') {\n                typeColor = this.state.typeResult[1].type.name;\n            } else if (this.state.typeResult[1].type.name === 'ice') {\n                typeColor = this.state.typeResult[1].type.name;\n            } else {\n                typeColor = this.state.typeResult[0].type.name;\n            }\n        }\n        //Color Sets\n        if (typeColor === 'fire' || typeColor === 'dragon') {\n            this.setState({\n                borderStyle: {borderColor: 'red'},\n                colorStyle: {color: 'red'}\n            })\n        } else if(typeColor === 'water' || typeColor === 'ice') {\n            this.setState({\n                borderStyle: {borderColor: 'blue'},\n                colorStyle: {color: 'blue'}\n            })\n        } else if(typeColor === 'electric') {\n            this.setState({\n                borderStyle: {borderColor: 'yellow'},\n                colorStyle: {color: 'yellow'}\n            })\n        } else if(typeColor === 'grass') {\n            this.setState({\n                borderStyle: {borderColor: 'green'},\n                colorStyle: {color: 'green'}\n            })\n        } else if(typeColor === 'poison') {\n            this.setState({\n                borderStyle: {borderColor: 'purple'},\n                colorStyle: {color: 'purple'}\n            })\n        } else if(typeColor === 'ground' || typeColor === 'rock') {\n            this.setState({\n                borderStyle: {borderColor: 'brown'},\n                colorStyle: {color: 'brown'}\n            })\n        }else {\n            this.setState({\n                borderStyle: {borderColor: 'white'},\n                colorStyle: {color: 'gray'}\n            })\n        }\n    }\n\n    //Function to UpperCase first Letter\n    firstUpper(stringD) {\n        return(\n            stringD.charAt(0).toUpperCase() + stringD.slice(1)\n        );\n    }\n\n    //Fetch Function\n    pokeSearch() {\n        fetch(this.state.urlForPokeSearch)\n            //Return as JSON\n            .then(d => d.json())\n            .then(d => {\n                this.setState({\n                    idResult: \"#\" + d.id,\n                    nameResult: d.name.charAt(0).toUpperCase() + d.name.slice(1),\n                    specResult: d.name,\n                    moveResult: d.moves,\n                    picResult: d.sprites.front_default,\n                    abilityResult: d.abilities,\n                    typeResult: d.types\n                })\n            })\n            //Set Style Colors depending on Result Type\n            .then(d => {\n                var typeColor = null;\n                //Check for Primary Type\n                if(this.state.typeResult.length === 1) {\n                    typeColor = this.state.typeResult[0].type.name;\n                } else {\n                    if (this.state.typeResult[1].type.name === 'fire') {\n                        typeColor = this.state.typeResult[1].type.name;\n                    } else if (this.state.typeResult[1].type.name === 'grass') {\n                        typeColor = this.state.typeResult[1].type.name;\n                    } else if (this.state.typeResult[1].type.name === 'electric') {\n                        typeColor = this.state.typeResult[1].type.name;\n                    } else if (this.state.typeResult[1].type.name === 'water') {\n                        typeColor = this.state.typeResult[1].type.name;\n                    } else if (this.state.typeResult[1].type.name === 'ice') {\n                        typeColor = this.state.typeResult[1].type.name;\n                    } else {\n                        typeColor = this.state.typeResult[0].type.name;\n                    }\n                }\n                //Color Sets\n                if (typeColor === 'fire' || typeColor === 'dragon') {\n                    this.setState({\n                        borderStyle: {borderColor: 'red'},\n                        colorStyle: {color: 'red'}\n                    })\n                } else if(typeColor === 'water' || typeColor === 'ice') {\n                    this.setState({\n                        borderStyle: {borderColor: 'blue'},\n                        colorStyle: {color: 'blue'}\n                    })\n                } else if(typeColor === 'electric') {\n                    this.setState({\n                        borderStyle: {borderColor: 'yellow'},\n                        colorStyle: {color: 'yellow'}\n                    })\n                } else if(typeColor === 'grass') {\n                    this.setState({\n                        borderStyle: {borderColor: 'green'},\n                        colorStyle: {color: 'green'}\n                    })\n                } else if(typeColor === 'poison') {\n                    this.setState({\n                        borderStyle: {borderColor: 'purple'},\n                        colorStyle: {color: 'purple'}\n                    })\n                } else if(typeColor === 'ground' || typeColor === 'rock') {\n                    this.setState({\n                        borderStyle: {borderColor: 'brown'},\n                        colorStyle: {color: 'brown'}\n                    })\n                }else {\n                    this.setState({\n                        borderStyle: {borderColor: 'white'},\n                        colorStyle: {color: 'gray'}\n                    })\n                }\n            });\n\n            const species = \"https://pokeapi.co/api/v2/pokemon-species/\" + this.state.specResult + \"/\";\n            this.speciesSearch(species)\n\n    }\n\n    speciesSearch(species) {\n        fetch(species)\n            .then(s => s.json())\n            .then(s => {\n                this.setState({\n                    speciesChain: s.evolution_chain.url\n                })\n            });\n    }\n\n    evolSearch(evol) {\n        const chainSearch = this.state.speciesChain;\n        fetch(chainSearch)\n            .then(c => c.json())\n            .then(c => {\n                this.setState({\n                    evolutionChain: c.chain\n                })\n            })\n    }\n\n\n    //Query API based on Move\n    moveSearch(moveParam) {\n        fetch(moveParam)\n            //Return as JSON\n            .then(m => m.json())\n            .then(m => {\n                this.setState({\n                    idMv: \"#\" + m.id,\n                    moveNameResult: m.name.charAt(0).toUpperCase() + m.name.slice(1),\n                    moveEffectResult: m.effect_entries[m.effect_entries.length -1].short_effect,\n                    movePowerResult: m.power,\n                    moveAccuracyResult: m.accuracy,\n                    moveEffectChanceResult: m.effect_chance,\n                    moveTypeResult: m.type.name.charAt(0).toUpperCase() + m.type.name.slice(1),\n                    currentView: \"MoveInfo\"\n                });\n            })\n            .then(m => {\n                var typeColor = null;\n                //Check for Primary Type\n                typeColor = this.state.moveTypeResult.toLowerCase();\n                //Color Sets\n                if (typeColor === 'fire' || typeColor === 'dragon') {\n                    this.setState({\n                        borderStyle: {borderColor: 'red'},\n                        colorStyle: {color: 'red'}\n                    })\n                } else if(typeColor === 'water' || typeColor === 'ice') {\n                    this.setState({\n                        borderStyle: {borderColor: 'blue'},\n                        colorStyle: {color: 'blue'}\n                    })\n                } else if(typeColor === 'electric') {\n                    this.setState({\n                        borderStyle: {borderColor: 'yellow'},\n                        colorStyle: {color: 'yellow'}\n                    })\n                } else if(typeColor === 'grass') {\n                    this.setState({\n                        borderStyle: {borderColor: 'green'},\n                        colorStyle: {color: 'green'}\n                    })\n                } else if(typeColor === 'poison') {\n                    this.setState({\n                        borderStyle: {borderColor: 'purple'},\n                        colorStyle: {color: 'purple'}\n                    })\n                } else if(typeColor === 'ground' || typeColor === 'rock') {\n                    this.setState({\n                        borderStyle: {borderColor: 'brown'},\n                        colorStyle: {color: 'brown'}\n                    })\n                }else {\n                    this.setState({\n                        borderStyle: {borderColor: 'white'},\n                        colorStyle: {color: 'gray'}\n                    })\n                }\n            })\n    }\n\n    //Query API based on Ability\n    abilitySearch(abilParam){\n        fetch(abilParam)\n            //Return as JSON\n            .then(b => b.json())\n            .then(b => {\n                this.setState({\n                    abilityIdResult: \"#\" + b.id,\n                    abilityNameResult: b.name.charAt(0).toUpperCase() + b.name.slice(1),\n                    abilityEffectResult: b.effect_entries[b.effect_entries.length -1].short_effect,\n                    currentView: \"AbilityInfo\"\n                });\n            })        \n    }\n\n    //Query API based on Type\n    typeSearch(typeParam) {\n        fetch(typeParam)\n        //Return JSON\n        .then( t => t.json())\n        .then( t => {\n            if (this.state.picResult != null) {\n                this.setState({\n                    typeIdResult: \"#\" + t.id,\n                    typeNameResult: t.name.charAt(0).toUpperCase() + t.name.slice(1),\n                    doubleDamageFrom: t.damage_relations.double_damage_from,\n                    doubleDamageTo: t.damage_relations.double_damage_to,\n                    halfDamageFrom: t.damage_relations.half_damage_from,\n                    halfDamageTo: t.damage_relations.half_damage_to,\n                    noDamageFrom: t.damage_relations.no_damage_from,\n                    noDamageTo: t.damage_relations.no_damage_to,\n                    prevPic: this.state.picResult,\n                    picResult: null,\n                    prevID: this.state.idResult,\n                    prevName: this.state.nameResult,\n                    nameResult: null,\n                    idResult: null,\n                    currentView: \"TypeInfo\"\n                });\n            } else {\n                this.setState({\n                    typeIdResult: \"#\" + t.id,\n                    typeNameResult: t.name.charAt(0).toUpperCase() + t.name.slice(1),\n                    doubleDamageFrom: t.damage_relations.double_damage_from,\n                    doubleDamageTo: t.damage_relations.double_damage_to,\n                    halfDamageFrom: t.damage_relations.half_damage_from,\n                    halfDamageTo: t.damage_relations.half_damage_to,\n                    noDamageFrom: t.damage_relations.no_damage_from,\n                    noDamageTo: t.damage_relations.no_damage_to,\n                    currentView: \"TypeInfo\"\n                });\n            }\n        })\n        .then(t => {\n            var typeColor = null;\n            //Check for Primary Type\n            typeColor = this.state.typeNameResult.toLowerCase();\n            //Color Sets\n            if (typeColor === 'fire' || typeColor === 'dragon') {\n                this.setState({\n                    borderStyle: {borderColor: 'red'},\n                    colorStyle: {color: 'red'}\n                })\n            } else if(typeColor === 'water' || typeColor === 'ice') {\n                this.setState({\n                    borderStyle: {borderColor: 'blue'},\n                    colorStyle: {color: 'blue'}\n                })\n            } else if(typeColor === 'electric') {\n                this.setState({\n                    borderStyle: {borderColor: 'yellow'},\n                    colorStyle: {color: 'yellow'}\n                })\n            } else if(typeColor === 'grass') {\n                this.setState({\n                    borderStyle: {borderColor: 'green'},\n                    colorStyle: {color: 'green'}\n                })\n            } else if(typeColor === 'poison') {\n                this.setState({\n                    borderStyle: {borderColor: 'purple'},\n                    colorStyle: {color: 'purple'}\n                })\n            } else if(typeColor === 'ground' || typeColor === 'rock') {\n                this.setState({\n                    borderStyle: {borderColor: 'brown'},\n                    colorStyle: {color: 'brown'}\n                })\n            }else {\n                this.setState({\n                    borderStyle: {borderColor: 'white'},\n                    colorStyle: {color: 'gray'}\n                })\n            }\n        })\n    }\n \n/*\n//\n//      Main\n//\n*/\n\n    render() { \n        return (\n            <React.Fragment>\n                {/*Headers*/}\n                <h1 style={this.state.colorStyle}>Pokedex</h1>\n                <h2>{this.state.idResult} {this.state.nameResult}</h2>\n                <img src={this.state.picResult}></img>\n                <br></br>\n\n        {(this.state.currentView === \"PokeInfo\") &&\n        <div id=\"PokeINFO\">\n        {/* Set API Url From Input */}\n                <input style={this.state.borderStyle} defaultValue=\"Pokemon or ID...\" onClick={ e =>\n                    e.target.value = ''\n                } onChange={ e => {\n                    this.setState({\n                        searchParam: (e.target.value).toLowerCase(),\n                        urlForPokeSearch: \"https://pokeapi.co/api/v2/pokemon/\" + (e.target.value).toLowerCase() + \"/\"\n                    })}\n                }></input>\n                {/* SearchButton */}\n                <button style={this.state.borderStyle} onClick={ () => \n                    this.pokeSearch()\n                }>Search</button>\n                <br></br>\n                <br></br>\n                <div className=\"tableDiv\">\n\n                <table>\n                    <tr>\n                    <td style={this.state.borderStyle}>\n                    <table id=\"abilityTable\">\n                        <tr>\n                            <td style={this.state.borderStyle}>\n                                <h3>Abilities:</h3>\n                            </td>\n                        </tr>\n                        {Object.keys(this.state.abilityResult).map((abil) => {\n                            return(\n                                <tr>\n                                    <td style={this.state.borderStyle}>\n                                        <a style={this.state.colorStyle} onClick={ ab => {\n                                            this.abilitySearch(\"https://pokeapi.co/api/v2/ability/\"+this.state.abilityResult[abil].ability.name+\"/\");\n                                        }}>{this.firstUpper(this.state.abilityResult[abil].ability.name)}</a>\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </table>\n                    </td>\n                    <td style={this.state.borderStyle}>\n                    <table id=\"typeTable\">\n                        <tr>\n                            <td style={this.state.borderStyle}>\n                                <h3>Types:</h3>\n                            </td>\n                        </tr>\n                        {Object.keys(this.state.typeResult).map((typing) => {\n                            return(\n                                <tr>\n                                    <td style={this.state.borderStyle}>\n                                        <a style={this.state.colorStyle} onClick={ t => {\n                                            this.typeSearch(\"https://pokeapi.co/api/v2/type/\" + this.state.typeResult[typing].type.name + \"/\");\n                                        }}>{this.firstUpper(this.state.typeResult[typing].type.name)}</a>\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </table>\n                    </td>\n                    </tr>\n                </table>\n\n                </div>\n                <h2>Moves:</h2>\n\n                <table id=\"moveTable\">\n                    <tr>\n                        <td style={this.state.borderStyle}> Move Name </td>\n                        <td style={this.state.borderStyle}> Learned At </td>\n                        <td style={this.state.borderStyle}> Learned By </td>\n                    </tr>\n                    {Object.keys(this.state.moveResult).map((move) => {\n                        return(\n                            <tr>\n                                <td style={this.state.borderStyle}>\n                                <a style={this.state.colorStyle} onClick={ mv => {\n                                    this.moveSearch(\"https://pokeapi.co/api/v2/move/\"+this.state.moveResult[move].move.name+\"/\");\n                                }}>{this.firstUpper(this.state.moveResult[move].move.name)}</a>\n                                </td>\n                                <td style={this.state.borderStyle}>{this.state.moveResult[move].version_group_details[this.state.moveResult[move].version_group_details.length -1].level_learned_at}</td>\n                                <td style={this.state.borderStyle}>{this.firstUpper(this.state.moveResult[move].version_group_details[this.state.moveResult[move].version_group_details.length -1].move_learn_method.name)}</td>\n                            </tr>\n                        );\n                    })}\n                </table>\n        </div>\n        }\n\n        {(this.state.currentView === \"MoveInfo\") &&\n            <div id=\"MoveInfo\">\n                <table>\n                    <tr>\n                        <th style={this.state.borderStyle} colSpan=\"2\">{this.state.moveNameResult}</th>\n                    </tr>\n                    <tr>\n                        <td style={this.state.borderStyle}>ID</td>\n                        <td style={this.state.borderStyle}>{this.state.idMv}</td>\n                    </tr>\n                    <tr>\n                        <td style={this.state.borderStyle}>Type</td>\n                        <td style={this.state.borderStyle}>{this.state.moveTypeResult}</td>\n                    </tr>\n                    <tr>\n                        <td style={this.state.borderStyle}>Effect</td>\n                        <td style={this.state.borderStyle}>{this.state.moveEffectResult}</td>\n                    </tr>\n                    <tr>\n                        <td style={this.state.borderStyle}>Power</td>\n                        <td style={this.state.borderStyle}>{this.state.movePowerResult}</td>\n                    </tr>\n                    <tr>\n                        <td style={this.state.borderStyle}>Accuracy</td>\n                        <td style={this.state.borderStyle}>{this.state.moveAccuracyResult}</td>\n                    </tr>\n                    <tr>\n                        <td style={this.state.borderStyle}>Effect Chance</td>\n                        <td style={this.state.borderStyle}>{this.state.moveEffectChanceResult}</td>\n                    </tr>\n                </table>\n                <br></br>\n                <button style={this.state.borderStyle} onClick={ r => {\n                    this.resetView()\n                }}>Reset</button>\n            </div>\n        }\n\n        {(this.state.currentView === \"AbilityInfo\") && \n            <div id=\"AbilityInfo\">\n                <table>\n                    <tr>\n                        <th style={this.state.borderStyle} colSpan=\"2\">{this.state.abilityNameResult}</th>\n                    </tr>\n                    <tr>\n                        <td style={this.state.borderStyle}>ID</td>\n                        <td style={this.state.borderStyle}>{this.state.abilityIdResult}</td>\n                    </tr>\n                    <tr>\n                        <td style={this.state.borderStyle}>Effect</td>\n                        <td style={this.state.borderStyle}>{this.state.abilityEffectResult}</td>\n                    </tr>\n                </table>\n                <br></br>\n                <button style={this.state.borderStyle} onClick={ r => {\n                    this.resetView()\n                }}>Reset</button>\n            </div>\n        }\n\n        {(this.state.currentView === \"TypeInfo\") && \n            <div id=\"TypeInfo\">\n                <table>\n                    <tr>\n                        <th style={this.state.borderStyle} colSpan=\"2\">{this.state.typeNameResult}</th>\n                    </tr>\n                    <tr>\n                        <td style={this.state.borderStyle}>ID</td>\n                        <td style={this.state.borderStyle}>{this.state.typeIdResult}</td>\n                    </tr>\n                    <tr>\n                        <th rowSpan={this.state.doubleDamageFrom.length + 1} style={this.state.borderStyle}>Double Damage From</th>\n                    </tr>\n                        {Object.keys(this.state.doubleDamageFrom).map((typ) => {\n                            return(\n                                <tr><td style={this.state.borderStyle}>\n                                <a onClick={ t => {\n                                    this.typeSearch(\"https://pokeapi.co/api/v2/type/\" + this.state.doubleDamageFrom[typ].name + \"/\");\n                                }}>{this.firstUpper(this.state.doubleDamageFrom[typ].name)}</a>\n                                </td></tr>\n                            );\n                        })}\n                    <tr>\n                        <th rowSpan={this.state.doubleDamageTo.length + 1} style={this.state.borderStyle}>Double Damage To</th>\n                    </tr>\n                        {Object.keys(this.state.doubleDamageTo).map((typ) => {\n                            return(\n                                <tr><td style={this.state.borderStyle}>\n                                <a onClick={ t => {\n                                    this.typeSearch(\"https://pokeapi.co/api/v2/type/\" + this.state.doubleDamageTo[typ].name + \"/\");\n                                }}>{this.firstUpper(this.state.doubleDamageTo[typ].name)}</a>\n                                </td></tr>\n                            );\n                        })}\n                    <tr>\n                        <th rowSpan={this.state.halfDamageFrom.length + 1} style={this.state.borderStyle}>Half Damage From</th>\n                    </tr>\n                        {Object.keys(this.state.halfDamageFrom).map((typ) => {\n                            return(\n                                <tr><td style={this.state.borderStyle}>\n                                <a onClick={ t => {\n                                    this.typeSearch(\"https://pokeapi.co/api/v2/type/\" + this.state.halfDamageFrom[typ].name + \"/\");\n                                }}>{this.firstUpper(this.state.halfDamageFrom[typ].name)}</a>\n                                </td></tr>\n                            );\n                        })}\n                    <tr>\n                        <th rowSpan={this.state.halfDamageTo.length + 1} style={this.state.borderStyle}>Half Damage To</th>\n                    </tr>\n                        {Object.keys(this.state.halfDamageTo).map((typ) => {\n                            return(\n                                <tr><td style={this.state.borderStyle}>\n                                <a onClick={ t => {\n                                    this.typeSearch(\"https://pokeapi.co/api/v2/type/\" + this.state.halfDamageTo[typ].name + \"/\");\n                                }}>{this.firstUpper(this.state.halfDamageTo[typ].name)}</a>\n                                </td></tr>\n                            );\n                        })}\n                    <tr>\n                        <th rowSpan={this.state.noDamageFrom.length + 1} style={this.state.borderStyle}>No Damage From</th>\n                    </tr>\n                        {Object.keys(this.state.noDamageFrom).map((typ) => {\n                            return(\n                                <tr><td style={this.state.borderStyle}>\n                                <a onClick={ t => {\n                                    this.typeSearch(\"https://pokeapi.co/api/v2/type/\" + this.state.noDamageFrom[typ].name + \"/\");\n                                }}>{this.firstUpper(this.state.noDamageFrom[typ].name)}</a>\n                                </td></tr>\n                            );\n                        })}\n                    <tr>\n                        <th rowSpan={this.state.noDamageTo.length + 1} style={this.state.borderStyle}>No Damage To</th>\n                    </tr>\n                        {Object.keys(this.state.noDamageTo).map((typ) => {\n                            return(\n                                <tr><td style={this.state.borderStyle}>\n                                <a onClick={ t => {\n                                    this.typeSearch(\"https://pokeapi.co/api/v2/type/\" + this.state.noDamageTo[typ].name + \"/\");\n                                }}>{this.firstUpper(this.state.noDamageTo[typ].name)}</a>\n                                </td></tr>\n                            );\n                        })}\n                </table>\n                <br></br>\n                <button style={this.state.borderStyle} onClick={ r => {\n                    this.resetView()\n                }}>Reset</button>\n            </div>\n        }\n            </React.Fragment>\n        );\n    }\n}\n \nexport default PokeTable;\n"]},"metadata":{},"sourceType":"module"}