{"ast":null,"code":"import _classCallCheck from \"/home/egarciasec/Projects/ReactJS/Dex/pdex/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/egarciasec/Projects/ReactJS/Dex/pdex/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/egarciasec/Projects/ReactJS/Dex/pdex/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/egarciasec/Projects/ReactJS/Dex/pdex/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/egarciasec/Projects/ReactJS/Dex/pdex/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/egarciasec/Projects/ReactJS/Dex/pdex/src/Components/PokeTable.jsx\";\nimport React, { Component } from 'react';\n\nvar PokeTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PokeTable, _Component);\n\n  function PokeTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PokeTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PokeTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      //Results obtained from JSON Fethc\n      idResult: null,\n      nameResult: null,\n      typeResult: [],\n      abilityResult: [],\n      moveResult: [],\n      picResult: null,\n      //Parameters for the Search\n      searchType: \"pokemon\",\n      searchParam: \"0\",\n      urlForPokeSearch: \"https://pokeapi.co/api/v2/pokemon/1/\",\n      urlForMoveSearch: \"https://pokeapi.co/api/v2/move/1/\",\n      //CSS Stylings\n      colorStyle: {\n        color: 'red'\n      },\n      borderStyle: {\n        borderColor: 'white'\n      }\n      /*\n      //\n      //      Functions\n      //\n      */\n      //Function to UpperCase first Letter\n\n    };\n    return _this;\n  }\n\n  _createClass(PokeTable, [{\n    key: \"firstUpper\",\n    value: function firstUpper(stringD) {\n      return stringD.charAt(0).toUpperCase() + stringD.slice(1);\n    } //Fetch Function\n\n  }, {\n    key: \"pokeSearch\",\n    value: function pokeSearch() {\n      var _this2 = this;\n\n      fetch(this.state.urlForPokeSearch) //Return as JSON\n      .then(function (d) {\n        return d.json();\n      }).then(function (d) {\n        _this2.setState({\n          idResult: \"#\" + d.id,\n          nameResult: d.name.charAt(0).toUpperCase() + d.name.slice(1),\n          moveResult: d.moves,\n          picResult: d.sprites.front_default,\n          abilityResult: d.abilities,\n          typeResult: d.types\n        });\n      }) //Set Style Colors depending on Result Type\n      .then(function (d) {\n        var typeColor = null; //Check for Primary Type\n\n        if (_this2.state.typeResult.length === 1) {\n          typeColor = _this2.state.typeResult[0].type.name;\n        } else {\n          if (_this2.state.typeResult[1].type.name === 'fire') {\n            typeColor = _this2.state.typeResult[1].type.name;\n          } else if (_this2.state.typeResult[1].type.name === 'grass') {\n            typeColor = _this2.state.typeResult[1].type.name;\n          } else if (_this2.state.typeResult[1].type.name === 'electric') {\n            typeColor = _this2.state.typeResult[1].type.name;\n          } else if (_this2.state.typeResult[1].type.name === 'water') {\n            typeColor = _this2.state.typeResult[1].type.name;\n          } else if (_this2.state.typeResult[1].type.name === 'ice') {\n            typeColor = _this2.state.typeResult[1].type.name;\n          } else {\n            typeColor = _this2.state.typeResult[0].type.name;\n          }\n        } //Color Sets\n\n\n        if (typeColor === 'fire' || typeColor === 'dragon') {\n          _this2.setState({\n            borderStyle: {\n              borderColor: 'red'\n            }\n          });\n        } else if (typeColor === 'water' || typeColor === 'ice') {\n          _this2.setState({\n            borderStyle: {\n              borderColor: 'blue'\n            }\n          });\n        } else if (typeColor === 'electric') {\n          _this2.setState({\n            borderStyle: {\n              borderColor: 'yellow'\n            }\n          });\n        } else if (typeColor === 'grass') {\n          _this2.setState({\n            borderStyle: {\n              borderColor: 'green'\n            }\n          });\n        } else if (typeColor === 'poison') {\n          _this2.setState({\n            borderStyle: {\n              borderColor: 'purple'\n            }\n          });\n        } else if (typeColor === 'ground' || typeColor === 'rock') {\n          _this2.setState({\n            borderStyle: {\n              borderColor: 'brown'\n            }\n          });\n        } else {\n          _this2.setState({\n            borderStyle: {\n              borderColor: 'white'\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"moveSearch\",\n    value: function moveSearch(moveParam) {\n      //fetch(moveParam)\n      //Return as JSON\n      //.then(m => m.json())\n      //.then(m => {\n      return (\n        /*    <div>\n                <ul>\n                    <li>{m.name.charAt(0).toUpperCase() + m.name.slice(1)}</li>\n                    <li>{m.effect_entries[m.effect_entries.length -1].short_effect}</li>\n                    <li>{m.power}</li>\n                    <li>{m.accuracy}</li>,\n                    <li>{m.effect_chance}</li>\n                </ul>\n            </div>*/\n        React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, moveParam)\n      );\n      /*\n      this.setState({\n          idMv: \"#\" + m.id,\n          moveNameResult: m.name.charAt(0).toUpperCase() + m.name.slice(1),\n          moveEffectResult: m.effect_entries[m.effect_entries.length -1].short_effect,\n          movePowerResult: m.power,\n          moveAccuracyResult: m.accuracy,\n          moveEffectChanceResult: m.effect_chance\n      })*/\n      //})\n    }\n    /*\n    //\n    //      Main\n    //\n    */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: this.state.colorStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Pokedex\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, this.state.idResult, \" \", this.state.nameResult), React.createElement(\"img\", {\n        src: this.state.picResult,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        style: this.state.borderStyle,\n        defaultValue: \"Pokemon or ID...\",\n        onClick: function onClick(e) {\n          return e.target.value = '';\n        },\n        onChange: function onChange(e) {\n          _this3.setState({\n            searchParam: e.target.value.toLowerCase(),\n            urlForPokeSearch: \"https://pokeapi.co/api/v2/pokemon/\" + e.target.value.toLowerCase() + \"/\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        style: this.state.borderStyle,\n        onClick: function onClick() {\n          return _this3.pokeSearch();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Search\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"tableDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        id: \"abilityTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Abilities:\"))), Object.keys(this.state.abilityResult).map(function (abil) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: _this3.state.borderStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, _this3.firstUpper(_this3.state.abilityResult[abil].ability.name)));\n      }))), React.createElement(\"td\", {\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        id: \"typeTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Types:\"))), Object.keys(this.state.typeResult).map(function (typing) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: _this3.state.borderStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, _this3.firstUpper(_this3.state.typeResult[typing].type.name)));\n      })))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Moves:\"), React.createElement(\"table\", {\n        id: \"moveTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \" Move Name \"), React.createElement(\"td\", {\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \" Learned At \"), React.createElement(\"td\", {\n        style: this.state.borderStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \" Learned By \")), Object.keys(this.state.moveResult).map(function (move) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: _this3.state.borderStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          onClick: function onClick(mv) {\n            _this3.moveSearch(mv.target.value);\n          },\n          value: _this3.firstUpper(_this3.state.moveResult[move].move.name),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, _this3.firstUpper(_this3.state.moveResult[move].move.name))), React.createElement(\"td\", {\n          style: _this3.state.borderStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, _this3.state.moveResult[move].version_group_details[_this3.state.moveResult[move].version_group_details.length - 1].level_learned_at), React.createElement(\"td\", {\n          style: _this3.state.borderStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }, _this3.firstUpper(_this3.state.moveResult[move].version_group_details[_this3.state.moveResult[move].version_group_details.length - 1].move_learn_method.name)));\n      })));\n    }\n  }]);\n\n  return PokeTable;\n}(Component);\n\nexport default PokeTable;","map":{"version":3,"sources":["/home/egarciasec/Projects/ReactJS/Dex/pdex/src/Components/PokeTable.jsx"],"names":["React","Component","PokeTable","state","idResult","nameResult","typeResult","abilityResult","moveResult","picResult","searchType","searchParam","urlForPokeSearch","urlForMoveSearch","colorStyle","color","borderStyle","borderColor","stringD","charAt","toUpperCase","slice","fetch","then","d","json","setState","id","name","moves","sprites","front_default","abilities","types","typeColor","length","type","moveParam","e","target","value","toLowerCase","pokeSearch","Object","keys","map","abil","firstUpper","ability","typing","move","mv","moveSearch","version_group_details","level_learned_at","move_learn_method"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n\nclass PokeTable extends Component {\n    state = { \n        //Results obtained from JSON Fethc\n        idResult: null,\n        nameResult: null,\n        typeResult: [],\n        abilityResult: [],\n        moveResult: [],\n        picResult: null ,\n        //Parameters for the Search\n        searchType: \"pokemon\",\n        searchParam: \"0\",\n        urlForPokeSearch: \"https://pokeapi.co/api/v2/pokemon/1/\",\n        urlForMoveSearch: \"https://pokeapi.co/api/v2/move/1/\",\n        //CSS Stylings\n        colorStyle: {\n            color: 'red'\n        },\n        borderStyle: {\n            borderColor: 'white'\n        }\n    }\n\n/*\n//\n//      Functions\n//\n*/\n\n    //Function to UpperCase first Letter\n    firstUpper(stringD) {\n        return(\n            stringD.charAt(0).toUpperCase() + stringD.slice(1)\n        );\n    }\n\n    //Fetch Function\n    pokeSearch() {\n        fetch(this.state.urlForPokeSearch)\n            //Return as JSON\n            .then(d => d.json())\n            .then(d => {\n                this.setState({\n                    idResult: \"#\" + d.id,\n                    nameResult: d.name.charAt(0).toUpperCase() + d.name.slice(1),\n                    moveResult: d.moves,\n                    picResult: d.sprites.front_default,\n                    abilityResult: d.abilities,\n                    typeResult: d.types\n                })\n            })\n            //Set Style Colors depending on Result Type\n            .then(d => {\n                var typeColor = null;\n                //Check for Primary Type\n                if(this.state.typeResult.length === 1) {\n                    typeColor = this.state.typeResult[0].type.name;\n                } else {\n                    if (this.state.typeResult[1].type.name === 'fire') {\n                        typeColor = this.state.typeResult[1].type.name;\n                    } else if (this.state.typeResult[1].type.name === 'grass') {\n                        typeColor = this.state.typeResult[1].type.name;\n                    } else if (this.state.typeResult[1].type.name === 'electric') {\n                        typeColor = this.state.typeResult[1].type.name;\n                    } else if (this.state.typeResult[1].type.name === 'water') {\n                        typeColor = this.state.typeResult[1].type.name;\n                    } else if (this.state.typeResult[1].type.name === 'ice') {\n                        typeColor = this.state.typeResult[1].type.name;\n                    } else {\n                        typeColor = this.state.typeResult[0].type.name;\n                    }\n                }\n                //Color Sets\n                if (typeColor === 'fire' || typeColor === 'dragon') {\n                    this.setState({\n                        borderStyle: {borderColor: 'red'}\n                    })\n                } else if(typeColor === 'water' || typeColor === 'ice') {\n                    this.setState({\n                        borderStyle: {borderColor: 'blue'}\n                    })\n                } else if(typeColor === 'electric') {\n                    this.setState({\n                        borderStyle: {borderColor: 'yellow'}\n                    })\n                } else if(typeColor === 'grass') {\n                    this.setState({\n                        borderStyle: {borderColor: 'green'}\n                    })\n                } else if(typeColor === 'poison') {\n                    this.setState({\n                        borderStyle: {borderColor: 'purple'}\n                    })\n                } else if(typeColor === 'ground' || typeColor === 'rock') {\n                    this.setState({\n                        borderStyle: {borderColor: 'brown'}\n                    })\n                }else {\n                    this.setState({\n                        borderStyle: {borderColor: 'white'}\n                    })\n                }\n            })\n    }\n\n    moveSearch(moveParam) {\n        //fetch(moveParam)\n            //Return as JSON\n            //.then(m => m.json())\n            //.then(m => {\n                return(\n                /*    <div>\n                        <ul>\n                            <li>{m.name.charAt(0).toUpperCase() + m.name.slice(1)}</li>\n                            <li>{m.effect_entries[m.effect_entries.length -1].short_effect}</li>\n                            <li>{m.power}</li>\n                            <li>{m.accuracy}</li>,\n                            <li>{m.effect_chance}</li>\n                        </ul>\n                    </div>*/\n\n                    <h1>{moveParam}</h1>\n                );\n                /*\n                this.setState({\n                    idMv: \"#\" + m.id,\n                    moveNameResult: m.name.charAt(0).toUpperCase() + m.name.slice(1),\n                    moveEffectResult: m.effect_entries[m.effect_entries.length -1].short_effect,\n                    movePowerResult: m.power,\n                    moveAccuracyResult: m.accuracy,\n                    moveEffectChanceResult: m.effect_chance\n                })*/\n            //})\n    }\n \n/*\n//\n//      Main\n//\n*/\n\n    render() { \n        return (\n            <React.Fragment>\n                {/*Headers*/}\n                <h1 style={this.state.colorStyle}>Pokedex</h1>\n                <h2>{this.state.idResult} {this.state.nameResult}</h2>\n                <img src={this.state.picResult}></img>\n                <br></br>\n                {/* Set API Url From Input */}\n                <input style={this.state.borderStyle} defaultValue=\"Pokemon or ID...\" onClick={ e =>\n                    e.target.value = ''\n                } onChange={ e => {\n                    this.setState({\n                        searchParam: (e.target.value).toLowerCase(),\n                        urlForPokeSearch: \"https://pokeapi.co/api/v2/pokemon/\" + (e.target.value).toLowerCase() + \"/\"\n                    })}\n                }></input>\n                {/* SearchButton */}\n                <button style={this.state.borderStyle} onClick={ () => \n                    this.pokeSearch()\n                }>Search</button>\n                <br></br>\n                <br></br>\n                <div className=\"tableDiv\">\n\n                <table>\n                    <tr>\n                    <td style={this.state.borderStyle}>\n                    <table id=\"abilityTable\">\n                        <tr>\n                            <td style={this.state.borderStyle}>\n                                <h3>Abilities:</h3>\n                            </td>\n                        </tr>\n                        {Object.keys(this.state.abilityResult).map((abil) => {\n                            return(\n                                <tr>\n                                    <td style={this.state.borderStyle}>{this.firstUpper(this.state.abilityResult[abil].ability.name)}</td>\n                                </tr>\n                            );\n                        })}\n                    </table>\n                    </td>\n                    <td style={this.state.borderStyle}>\n                    <table id=\"typeTable\">\n                        <tr>\n                            <td style={this.state.borderStyle}>\n                                <h3>Types:</h3>\n                            </td>\n                        </tr>\n                        {Object.keys(this.state.typeResult).map((typing) => {\n                            return(\n                                <tr>\n                                    <td style={this.state.borderStyle}>{this.firstUpper(this.state.typeResult[typing].type.name)}</td>\n                                </tr>\n                            );\n                        })}\n                    </table>\n                    </td>\n                    </tr>\n                </table>\n\n                </div>\n\t\t<br></br>\n                <h2>Moves:</h2>\n\n                <table id=\"moveTable\">\n                    <tr>\n                        <td style={this.state.borderStyle}> Move Name </td>\n                        <td style={this.state.borderStyle}> Learned At </td>\n                        <td style={this.state.borderStyle}> Learned By </td>\n                    </tr>\n                    {Object.keys(this.state.moveResult).map((move) => {\n                        return(\n                            <tr>\n                                <td style={this.state.borderStyle}>\n                                <a onClick={ mv => {\n                                    this.moveSearch(mv.target.value);\n                                }} value={this.firstUpper(this.state.moveResult[move].move.name)}>{this.firstUpper(this.state.moveResult[move].move.name)}</a>\n                                </td>\n                                <td style={this.state.borderStyle}>{this.state.moveResult[move].version_group_details[this.state.moveResult[move].version_group_details.length -1].level_learned_at}</td>\n                                <td style={this.state.borderStyle}>{this.firstUpper(this.state.moveResult[move].version_group_details[this.state.moveResult[move].version_group_details.length -1].move_learn_method.name)}</td>\n                            </tr>\n                        );\n                    })}\n                </table>\n\n            </React.Fragment>\n        );\n    }\n}\n \nexport default PokeTable;\n"]},"metadata":{},"sourceType":"module"}